{"version":3,"sources":["components/Footer.js","images/avatar.png","components/Navbar.js","components/Header.js","components/index.js","images/gametagr.jpeg","images/querycuisine.jpeg","images/weatherdashboard.jpeg","images/passwordgenerator.jpeg","images/workouttracker.jpeg","images/notetaker.jpeg","components/Portfolio.js","components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","maxWidth","fontSize","Footer","useState","isLinkedInClicked","isGitHubClicked","state","setState","urlClicked","action","value","window","location","href","classes","BottomNavigation","width","style","background","BottomNavigationAction","onClick","className","padding","icon","theme","menuSliderContainer","height","avatar","display","margin","spacing","listItem","color","menuItems","listIcon","listText","listPath","Apps","ContactMail","Navbar","slider","left","toggleSlider","open","Box","component","AppBar","position","Toolbar","IconButton","ArrowBack","Typography","variant","anchor","onClose","Avatar","src","alt","Divider","List","map","lsItem","key","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","title","subtitle","marginBottom","typedContainer","top","transform","textAlign","zIndex","Header","Grid","container","justify","strings","typeSpeed","backSpeed","loop","particlesCanva","opacity","Home","canvasClassName","params","particles","number","density","enable","value_area","shape","type","stroke","size","random","anim","speed","size_min","sync","opacity_min","mainContainer","cardContainer","Portfolio","item","xs","sm","md","Card","CardActionArea","CardMedia","image","project1","CardContent","gutterBottom","CardActions","Button","project2","project3","project4","project5","project6","form","marginTop","borderColor","InputField","withStyles","TextField","Contacts","textTransform","fullWidth","label","inputProps","endIcon","App","CssBaseline","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be5aa587.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nconst useStyles = makeStyles({\n  root: {\n    \"& .MuiBottomNavigationAction-root\": {\n      minWidth: 0,\n      maxWidth: 250,\n    },\n    \"& .MuiSvgIcon-root\": {\n      \"&:hover\": {\n        fontSize: \"2.1rem\",\n      },\n    },\n  },\n});\n\nconst Footer = () => {\n  const [state, setState] = useState({\n    isLinkedInClicked: false,\n    isGitHubClicked: false,\n  });\n\n  const urlClicked = (action, value) => () => {\n    setState({ ...state, [action]: value });\n  };\n\n  if (state.isGitHubClicked === true || state.isLinkedInClicked === true) {\n    const linkedInUrl = \"https://www.linkedin.com/\";\n    const gitHubUrl = \"https://github.com/\";\n\n    window.location.href =\n      state && state.isGitHubClicked\n        ? gitHubUrl\n        : state.isLinkedInClicked\n        ? linkedInUrl\n        : \"/\";\n  }\n  const classes = useStyles();\n  return (\n    <BottomNavigation width=\"auto\" style={{ background: \"#c1b202\" }}>\n      <BottomNavigationAction\n        onClick={urlClicked(\"isGitHubClicked\", true)}\n        className={classes.root}\n        style={{ padding: 0 }}\n        icon={<GitHubIcon />}\n      />\n      <BottomNavigationAction\n        onClick={urlClicked(\"isLinkedInClicked\", true)}\n        className={classes.root}\n        style={{ padding: 0 }}\n        icon={<LinkedInIcon />}\n      />\n    </BottomNavigation>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/avatar.ac4560fd.png\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MobilLeftMenuSlider from \"@material-ui/core/Drawer\";\nimport Footer from \"./Footer\";\nimport {\n  AppBar,\n  Toolbar,\n  ListItem,\n  IconButton,\n  ListItemText,\n  Avatar,\n  Divider,\n  List,\n  Typography,\n  Box,\n  ListItemIcon,\n} from \"@material-ui/core\";\nimport { ArrowBack, Home, Apps, ContactMail } from \"@material-ui/icons\";\nimport avatar from \"../images/avatar.png\";\n\n// CSS STYLES\nconst useStyles = makeStyles((theme) => ({\n  menuSliderContainer: {\n    width: 250,\n    background: \"#000\",\n    height: \"100%\",\n  },\n  avatar: {\n    display: \"block\",\n    margin: \"0.5rem auto\",\n    width: theme.spacing(13),\n    height: theme.spacing(13),\n  },\n  listItem: {\n    color: \"white\",\n  },\n}));\n\n// Array which contains text links & icons\nconst menuItems = [\n  {\n    listIcon: <Home />,\n    listText: \"Home\",\n    listPath: \"/\",\n  },\n  {\n    listIcon: <Apps />,\n    listText: \"Portfolio\",\n    listPath: \"/portfolio\",\n  },\n  {\n    listIcon: <ContactMail />,\n    listText: \"Contacts\",\n    listPath: \"/contacts\",\n  },\n];\n\nconst Navbar = () => {\n  const [state, setState] = useState({\n    left: false,\n  });\n\n  const toggleSlider = (slider, open) => () => {\n    setState({ ...state, [slider]: open });\n  };\n\n  const classes = useStyles();\n\n  const sideList = (slider) => (\n    <Box\n      className={classes.menuSliderContainer}\n      component=\"div\"\n      onClick={toggleSlider(slider, false)}\n    >\n      <Avatar className={classes.avatar} src={avatar} alt=\"Cris Franco\" />\n      <Divider />\n      <List>\n        {menuItems.map((lsItem, key) => (\n          <ListItem button key={key} component={Link} to={lsItem.listPath}>\n            <ListItemIcon className={classes.listItem}>\n              {lsItem.listIcon}\n            </ListItemIcon>\n            <ListItemText\n              className={classes.listItem}\n              primary={lsItem.listText}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n  return (\n    <>\n      <Box component=\"nav\">\n        <AppBar position=\"static\" style={{ background: \"#222\" }}>\n          <Toolbar>\n            <IconButton onClick={toggleSlider(\"left\", true)}>\n              <ArrowBack style={{ color: \"white\" }} />\n            </IconButton>\n            <Typography variant=\"h5\" style={{ color: \"#c1b202\" }}>\n              Portfolio\n            </Typography>\n            <MobilLeftMenuSlider\n              anchor=\"left\"\n              open={state.left}\n              onClose={toggleSlider(\"left\", false)}\n            >\n              {sideList(\"left\")}\n              <Footer />\n            </MobilLeftMenuSlider>\n          </Toolbar>\n        </AppBar>\n      </Box>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Avatar, Grid, Box } from \"@material-ui/core\";\nimport Typed from \"react-typed\";\nimport avatar from \"../images/avatar.png\";\n\n// CSS STYLES\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.spacing(15),\n    height: theme.spacing(15),\n    margin: theme.spacing(1),\n  },\n  title: {\n    color: \"#c1b202\",\n  },\n  subtitle: {\n    color: \"white\",\n    marginBottom: \"3rem\",\n  },\n  typedContainer: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"100vw\",\n    textAlign: \"center\",\n    zIndex: 1,\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.typedContainer}>\n      <Grid container justify=\"center\">\n        <Avatar className={classes.avatar} src={avatar} alt=\"Cris Franco\" />\n      </Grid>\n      <Typography className={classes.title} variant=\"h4\">\n        <Typed strings={[\"Cris Franco\"]} typeSpeed={40} />\n      </Typography>\n      <br />\n      <Typography className={classes.subtitle} variant=\"h5\">\n        <Typed\n          strings={[\"Web Development\", \"HTML/CSS\", \"JavaScript\", \"ReactJS\"]}\n          typeSpeed={40}\n          backSpeed={60}\n          loop\n        />\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Header from \"./Header\";\nimport Particles from \"react-particles-js\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  particlesCanva: {\n    position: \"absolute\",\n    opacity: \"0.3\",\n  },\n});\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Navbar />\n      <Header />\n      <Particles\n        canvasClassName={classes.particlesCanva}\n        params={{\n          particles: {\n            number: {\n              value: 45,\n              density: {\n                enable: true,\n                value_area: 900,\n              },\n            },\n            shape: {\n              type: \"triangle\",\n              stroke: {\n                width: 1,\n                color: \"#c1b202\",\n              },\n            },\n            size: {\n              value: 8,\n              random: true,\n              anim: {\n                enable: true,\n                speed: 6,\n                size_min: 0.1,\n                sync: true,\n              },\n            },\n            opacity: {\n              value: 1,\n              random: true,\n              anim: {\n                enable: true,\n                speed: 1,\n                opacity_min: 0.1,\n                sync: true,\n              },\n            },\n          },\n        }}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/gametagr.f7ad66a7.jpeg\";","export default __webpack_public_path__ + \"static/media/querycuisine.09700d07.jpeg\";","export default __webpack_public_path__ + \"static/media/weatherdashboard.70b44c64.jpeg\";","export default __webpack_public_path__ + \"static/media/passwordgenerator.5a8e2e49.jpeg\";","export default __webpack_public_path__ + \"static/media/workouttracker.279a0eaa.jpeg\";","export default __webpack_public_path__ + \"static/media/notetaker.55abb5e9.jpeg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  Grid,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport Navbar from \"./Navbar\";\nimport project1 from \"../images/gametagr.jpeg\";\nimport project2 from \"../images/querycuisine.jpeg\";\nimport project3 from \"../images/weatherdashboard.jpeg\";\nimport project4 from \"../images/passwordgenerator.jpeg\";\nimport project5 from \"../images/workouttracker.jpeg\";\nimport project6 from \"../images/notetaker.jpeg\";\n\nconst useStyles = makeStyles({\n  mainContainer: {\n    background: \"#5d5d58\",\n    height: \"100%\",\n  },\n  cardContainer: {\n    maxWidth: 345,\n    margin: \"5rem auto\",\n  },\n});\n\nconst Portfolio = () => {\n  const classes = useStyles();\n  return (\n    <Box component=\"div\" className={classes.mainContainer}>\n      <Navbar />\n      <Grid container justify=\"center\">\n        {/*Project 1*/}\n        <Grid item xs={12} sm={8} md={6}>\n          <Card className={classes.cardContainer}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt=\"Project1\"\n                height=\"140\"\n                image={project1}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\">\n                  GameTagr\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  The following application is a video game review page that\n                  allows the user to search for games that have reviews from\n                  real gamers.\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                Github Repo\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Live Demo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        {/*Project 2*/}\n        <Grid item xs={12} sm={8} md={6}>\n          <Card className={classes.cardContainer}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt=\"Project2\"\n                height=\"140\"\n                image={project2}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\">\n                  Query Cuisine\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  A simple food app that allows users to search for recipes\n                  based on ingredients that they have on hand.\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                Github Repo\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Live Demo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        {/*Project 3*/}\n        <Grid item xs={12} sm={8} md={6}>\n          <Card className={classes.cardContainer}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt=\"Project3\"\n                height=\"140\"\n                image={project3}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\">\n                  Weather Dashboard\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Weather-Dashboard is an application to find a weather\n                  condition of a given city both the current and 5-Days forecast\n                  at the same time.\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                Github Repo\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Live Demo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        {/*Project 4*/}\n        <Grid item xs={12} sm={8} md={6}>\n          <Card className={classes.cardContainer}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt=\"Project4\"\n                height=\"140\"\n                image={project4}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\">\n                  Password Generator\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  A password generator application that uses a series of prompts\n                  and alerts to guide the user through entering valid password\n                  parameters. It then generates a password that fits those\n                  constraints using random number generation.\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                Github Repo\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Live Demo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        {/*Project 5*/}\n        <Grid item xs={12} sm={8} md={6}>\n          <Card className={classes.cardContainer}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt=\"Project5\"\n                height=\"140\"\n                image={project5}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\">\n                  Workout Tracker\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  This application helps the user track their progress through\n                  daily workouts. A user can log any number of exercises for the\n                  day's workout. They can then see stats and graphs for their\n                  completed workouts on the stats page.\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                Github Repo\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Live Demo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        {/*Project 6*/}\n        <Grid item xs={12} sm={8} md={6}>\n          <Card className={classes.cardContainer}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt=\"Project6\"\n                height=\"140\"\n                image={project6}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\">\n                  Note Taker\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  The following application uses node js to create a webpage\n                  that displays a note taking service. It allows for the user to\n                  save their notes, create new notes, and delete old ones.\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                Github Repo\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Live Demo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { TextField, Typography, Button, Grid, Box } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Navbar from \"./Navbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    position: \"absolute\",\n  },\n  button: {\n    marginTop: \"1rem\",\n    color: \"tan\",\n    borderColor: \"tan\",\n  },\n}));\n\nconst InputField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"#c1b202\",\n    },\n    \"& label\": {\n      color: \"#c1b202\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#c1b202\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#c1b202\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#c1b202\",\n      },\n    },\n  },\n})(TextField);\n\nconst Contacts = () => {\n  const classes = useStyles();\n\n  return (\n    <Box component=\"div\" style={{ background: \"black\", height: \"100vh\" }}>\n      <Navbar />\n      <Grid container justify=\"center\">\n        <Box component=\"form\" className={classes.form}>\n          <Typography\n            variant=\"h5\"\n            style={{\n              color: \"#c1b202\",\n              textAlign: \"center\",\n              textTransform: \"upperCase\",\n            }}\n          >\n            contact me\n          </Typography>\n          <InputField\n            fullWidth={true}\n            label=\"Name\"\n            variant=\"outlined\"\n            inputProps={{ style: { color: \"white\" } }}\n            margin=\"dense\"\n            size=\"medium\"\n          />\n          <br />\n\n          <InputField\n            fullWidth={true}\n            label=\"Email\"\n            variant=\"outlined\"\n            inputProps={{ style: { color: \"white\" } }}\n            margin=\"dense\"\n            size=\"medium\"\n          />\n          <br />\n          <InputField\n            fullWidth={true}\n            label=\"Company name\"\n            variant=\"outlined\"\n            inputProps={{ style: { color: \"white\" } }}\n            margin=\"dense\"\n            size=\"medium\"\n          />\n          <br />\n          <Button\n            className={classes.button}\n            variant=\"outlined\"\n            fullWidth={true}\n            endIcon={<SendIcon />}\n          >\n            contact me\n          </Button>\n        </Box>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Contacts;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"./App.css\";\nimport Home from \"./components\";\nimport Portfolio from \"./components/Portfolio\";\nimport Contacts from \"./components/Contacts\";\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <HashRouter exact path=\"/\" component={Home} />\n      <HashRouter path=\"/portfolio\" component={Portfolio} />\n      <HashRouter path=\"/contacts\" component={Contacts} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}